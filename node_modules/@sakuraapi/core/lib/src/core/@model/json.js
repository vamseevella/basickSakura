"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.jsonSymbols = {
    jsonByFieldName: Symbol('jsonByFieldName'),
    jsonByPropertyName: Symbol('jsonByPropertyName'),
    propertyName: Symbol('jsonPropertyName')
};
function Json(jsonOptions, context) {
    const options = (typeof jsonOptions === 'string')
        ? { field: jsonOptions }
        : jsonOptions || {};
    return (target, key) => {
        context = context || options.context || 'default';
        options[exports.jsonSymbols.propertyName] = key;
        const metaPropertyFieldMap = getMetaDataMap(target, exports.jsonSymbols.jsonByPropertyName);
        const metaFieldPropertyMap = getMetaDataMap(target, exports.jsonSymbols.jsonByFieldName);
        metaPropertyFieldMap.set(`${key}:${context}`, options);
        metaFieldPropertyMap.set(`${options.field || key}:${context}`, options);
        function getMetaDataMap(source, symbol) {
            let map = Reflect.getMetadata(symbol, source);
            if (!map) {
                map = new Map();
                Reflect.defineMetadata(symbol, map, source);
            }
            return map;
        }
    };
}
exports.Json = Json;
//# sourceMappingURL=json.js.map